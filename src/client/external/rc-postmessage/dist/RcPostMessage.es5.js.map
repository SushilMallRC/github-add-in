{"version":3,"file":"RcPostMessage.es5.js","sources":["../src/constants.ts","../src/PostMessageBase.ts","../src/PostMessageApp.ts","../src/utils.ts","../src/PostMessageHost.ts","../src/PostMessageManager.ts","../src/index.ts"],"sourcesContent":["/*\n * @Author: Spike.Yang\n * @Date: 2020-05-14 13:01:04\n * @Last Modified time: 2020-05-14 13:01:04\n */\n\nconst INIT_CHANNEL = 'get-host-origin';\nconst TAG = 'RC-PostMessage';\nconst INIT_TARGET_ORIGIN = '*';\nconst DEFAULT_TIMEOUT = 5000;\n\nexport { INIT_CHANNEL, TAG, INIT_TARGET_ORIGIN, DEFAULT_TIMEOUT };\n","/*\n * @Author: Spike.Yang\n * @Date: 2020-05-14 13:05:42\n * @Last Modified time: 2020-05-14 13:05:42\n */\nimport {\n  Roles,\n  BaseProps,\n  Payload,\n  Listener,\n  Response,\n  EventType,\n  ResponseCode,\n  IPostMessageBase,\n} from './types';\nimport {\n  INIT_CHANNEL,\n  TAG,\n  INIT_TARGET_ORIGIN,\n  DEFAULT_TIMEOUT\n} from './constants';\n\nexport default abstract class PostMessageBase implements IPostMessageBase {\n  private _targetOrigin: string = INIT_TARGET_ORIGIN;\n  private _timeout: number = DEFAULT_TIMEOUT;\n  private _handleMaps: Map<string, Listener> = new Map();\n  private _eventMaps: Map<string, Listener> = new Map();\n  private _role: Roles = Roles.HOST;\n\n  constructor(public options: BaseProps, role: Roles) {\n    window.addEventListener('message', this._receiveMessage);\n    this._role = role;\n\n    const { targetOrigin, timeout } = options;\n\n    if (targetOrigin) {\n      this._targetOrigin = targetOrigin;\n      this.handle(INIT_CHANNEL, () => window.location.origin);\n    } else {\n      this._getTargetOrigin();\n    }\n\n    if (timeout) this._timeout = timeout;\n  }\n\n  private _getTargetOrigin = async () => {\n    try {\n      const result = await this.invoke(INIT_CHANNEL);\n      const { payload } = result;\n      payload && (this._targetOrigin = payload);\n      this._debug(`_targetOrigin: ${payload}`);\n    } catch (e) {}\n  }\n\n  private _receiveMessage = async (messageEvent: MessageEvent) => {\n    const { data, ports, origin } = messageEvent;\n\n    const { payload, type, channel } = data;\n    this._debug(`_receiveMessage type: ${type}, channel: ${channel}, payload: ${JSON.stringify(payload)}`);\n    if (!type || ![EventType.EVENT, EventType.HANDLE].includes(type)) return;\n\n    if (type === EventType.EVENT) {\n      const func = this._eventMaps.get(channel);\n      if (!func || typeof func !== 'function') return;\n      this._debug(`_receiveMessage type: ${EventType.EVENT}`);\n      func(payload, messageEvent);\n      return;\n    }\n\n    const port = ports[0];\n\n    this._debug(`_receiveMessage origin: ${origin}, targetOrigin: ${this.targetOrigin}`);\n    if (origin && this._targetOrigin !== '*' && origin !== this.targetOrigin) {\n      return;\n    };\n\n    const func = this._handleMaps.get(channel);\n    if (!func || typeof func !== 'function') return;\n\n    let result: any = {}\n    try {\n      result.payload = await func(payload, messageEvent);\n      result.code = ResponseCode.SUCCESS;\n    } catch (e) {\n      result.code = ResponseCode.ERROR;\n      result.error = this._formatMsg(`${channel} ${e.message}`);\n    }\n\n    this._debug(`_receiveMessage result: ${JSON.stringify(result)}`);\n\n    port.postMessage(result);\n  }\n\n  private _formatMsg = (msg: string) => {\n    return `[${TAG}-${this._role}]: ${msg}`;\n  }\n\n  private _wait = (channel: string, msgChannel: MessageChannel, timeout?: number,) => {\n    const time = timeout || this._timeout;\n    const timeoutResponse = {\n      code: ResponseCode.TIMEOUT,\n      error: this._formatMsg(`${channel} is timeout.`),\n      payload: null,\n    };\n    return new Promise<Response>((resolve, reject) => setTimeout(() => {\n      msgChannel.port1.close();\n      reject(timeoutResponse);\n    }, time));\n  }\n\n  private _debug = (msg: string) => {\n    this.options.debug && console.info(this._formatMsg(msg));\n  }\n\n  public invoke = (channel: string, payload?: Payload, timeout?: number) => {\n    const { contentWindow } = this.options;\n    if (!contentWindow) {\n      return Promise.reject({\n        code: ResponseCode.ERROR,\n        error: this._formatMsg(`${channel} contentWindow is undefined`),\n      });\n    }\n    const msgChannel = new MessageChannel();\n    this._debug(`invoke ${channel}`);\n\n    return Promise.race([\n      new Promise<Response>((resolve, reject) => {\n        contentWindow.postMessage({\n          type: EventType.HANDLE,\n          channel,\n          payload\n        }, this._targetOrigin, [msgChannel.port2]);\n\n        msgChannel.port1.onmessage = (messageEvent: MessageEvent) => {\n          const result = messageEvent.data as Response;\n          if (result.code !== ResponseCode.SUCCESS) {\n            reject(result);\n            return;\n          }\n          resolve(result);\n          msgChannel.port1.close();\n        }\n\n        msgChannel.port1.onmessageerror = (messageEvent: MessageEvent) => {\n          const error = {\n            code: ResponseCode.ERROR,\n            error: this._formatMsg(`${channel} onmessageerror`),\n          };\n          reject({ ...messageEvent.data, ...error });\n          msgChannel.port1.close();\n        }\n      }),\n      this._wait(channel, msgChannel, timeout),\n    ])\n  }\n\n  public handle = (channel: string, listener: Listener) => {\n    this._debug(`handle ${channel}`);\n    this._handleMaps.set(channel, listener);\n  }\n\n  public handleOnce = (channel: string, listener: Listener) => {\n    this._handleMaps.set(channel, (payload: Payload, event: MessageEvent) => {\n      this.removeHandler(channel);\n      return listener(payload, event);\n    });\n  }\n\n  public removeHandler = (channel: string) => {\n    this._handleMaps.delete(channel);\n  }\n\n  public removeAllHandler = () => {\n    this._handleMaps.clear();\n  }\n\n  public send = (channel: string, payload: Payload) => {\n    const { contentWindow } = this.options;\n    if (!contentWindow) return;\n\n    this._debug(`send ${channel} ${this._targetOrigin}`);\n    contentWindow.postMessage({\n      type: EventType.EVENT,\n      channel,\n      payload\n    }, this._targetOrigin);\n  }\n\n  public on = (channel: string, listener: Listener) => {\n    this._debug(`on ${channel}`);\n    this._eventMaps.set(channel, listener);\n  }\n\n  public once = (channel: string, listener: Listener) => {\n    this._eventMaps.set(channel, (payload: Payload, event: MessageEvent) => {\n      this.removeListener(channel);\n      return listener(payload, event);\n    });\n  }\n\n  public removeListener = (channel: string) => {\n    this._eventMaps.delete(channel);\n  }\n\n  public removeAllListeners = () => {\n    this._eventMaps.clear();\n  }\n\n  public get targetOrigin () {\n    return this._targetOrigin;\n  }\n\n  public get role () {\n    return this._role;\n  }\n\n  public dispose = () => {\n    window.removeEventListener('message', this._receiveMessage);\n    this.removeAllListeners();\n    this.removeAllHandler();\n  }\n};\n\n","/*\n * @Author: Spike.Yang\n * @Date: 2020-05-14 13:11:26\n * @Last Modified time: 2020-05-14 13:11:26\n */\nimport PostMessageBase from './PostMessageBase';\nimport { AppProps, IPostMessageApp, Roles } from './types';\n\nexport default class PostMessageApp extends PostMessageBase implements IPostMessageApp{\n  constructor(options: AppProps = {}) {\n    const baseOptions = { contentWindow: window.parent ? window.parent : typeof opener === 'object' ? opener : null, ...options,  }\n    super(baseOptions, Roles.APP);\n  }\n}\n","/*\n * @Author: Spike.Yang\n * @Date: 2020-05-14 13:06:28\n * @Last Modified time: 2020-05-14 13:06:28\n */\n\n\nconst uuid = () => {\n  // @ts-ignore\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n    (c ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))).toString(16)\n  );\n};\n\nexport default uuid;\n","/*\n * @Author: Spike.Yang\n * @Date: 2020-05-14 13:10:02\n * @Last Modified time: 2020-05-14 13:10:02\n */\nimport PostMessageBase from './PostMessageBase';\nimport { IPostMessageHost, HostProps, Roles } from './types';\n\nexport default class PostMessageHost extends PostMessageBase implements IPostMessageHost {\n  constructor(options: HostProps, public id: string) {\n    super(options,  Roles.HOST);\n  }\n }\n","/*\n * @Author: Spike.Yang\n * @Date: 2020-05-14 13:12:40\n * @Last Modified time: 2020-05-14 13:12:40\n */\nimport { IPostMessageManager, HostProps, Payload } from './types';\nimport uuid from './utils';\nimport PostMessageHost from './PostMessageHost';\nimport { TAG } from './constants';\n\nexport default class PostMessageManager implements IPostMessageManager {\n  private static _postMessageHostMaps = new Map<string, PostMessageHost>();\n\n  static addPostMessageHost = (id: string, instance: PostMessageHost) => {\n    PostMessageManager._postMessageHostMaps.set(id, instance);\n  }\n\n  public create = (options: HostProps) => {\n    const errorTag = `[${TAG}-Host]:`;\n    if (!options.contentWindow) {\n      throw new Error(`${errorTag} Missing required parameters contentWindow`);\n    }\n    if (!options.targetOrigin) {\n      throw new Error(`${errorTag} Missing required parameters targetOrigin`);\n    }\n    const id = uuid();\n    const instance = new PostMessageHost(options, id);\n    PostMessageManager.addPostMessageHost(id, instance);\n\n    return instance;\n  }\n\n  public destroy = (id: string) => {\n    PostMessageManager._postMessageHostMaps.delete(id);\n  }\n\n  public broadcast = (channel: string, payload: Payload) => {\n    for (const instance of PostMessageManager._postMessageHostMaps.values()) {\n      // @ts-ignore\n      if (instance && instance instanceof PostMessageHost) {\n        instance.send(channel, payload);\n      }\n    }\n  }\n}\n","/*\n * @Author: Spike.Yang\n * @Date: 2020-05-14 13:15:06\n * @Last Modified time: 2020-05-14 13:15:06\n */\n\nexport { default as PostMessageApp} from './PostMessageApp';\nexport { default as PostMessageManager} from './PostMessageManager';\n\n"],"names":[],"mappings":"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"}